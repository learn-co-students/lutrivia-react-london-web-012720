{"ast":null,"code":"var _jsxFileName = \"/Users/amy/Development/code/lutrivia-react-london-web-012720/lutrivia/src/App.js\";\nimport React, { Component } from \"react\";\nimport Header from \"./components/Header\";\nimport Game from \"./components/Game\";\nimport Submit from \"./components/Submit\";\nimport Scores from \"./components/Score\";\nimport data from \"./data\";\nexport default class App extends Component {\n  constructor() {\n    super();\n\n    this.newGame = () => {\n      this.setState({\n        score: 0,\n        questions: this.get4Q()\n      });\n    };\n\n    this.get4Q = () => {\n      const questions = [];\n\n      for (let i = 0; i < 4; i++) {\n        let question = this.get1Q();\n\n        while (questions.includes(question)) {\n          question = this.get1Q();\n        }\n\n        questions.push(question);\n      }\n\n      return questions;\n    };\n\n    this.get1Q = () => {\n      const index = this.getRandomInt(data.questions.length);\n      return data.questions[index];\n    };\n\n    this.click = (e, question) => {\n      if (e.target.value === \"\".concat(question.answer)) {\n        e.target.style.color = \"green\";\n        e.target.disabled = true;\n        this.setState({\n          score: this.state.score + 1\n        });\n      } else {\n        e.target.style.color = \"red\";\n        e.target.disabled = true;\n      }\n    };\n\n    this.onSubmitScore = e => {\n      e.preventDefault();\n      this.state.scores.push({\n        name: e.target.name.value,\n        score: this.state.score\n      });\n      e.target.reset();\n      this.setState({\n        scores: this.state.scores\n      });\n      game;\n    };\n\n    this.state = {\n      score: 0,\n      questions: [],\n      scores: []\n    };\n  }\n\n  componentDidMount() {\n    this.newGame();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, React.createElement(Header, {\n      score: this.state.score,\n      newGame: this.newGame,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }), React.createElement(Game, {\n      questions: this.state.questions,\n      click: this.click,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }), React.createElement(Submit, {\n      onSubmitScore: this.onSubmitScore,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }), React.createElement(Scores, {\n      scores: this.state.scores,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }));\n  }\n\n  getRandomInt(max) {\n    return Math.floor(Math.random() * Math.floor(max));\n  }\n\n}","map":{"version":3,"sources":["/Users/amy/Development/code/lutrivia-react-london-web-012720/lutrivia/src/App.js"],"names":["React","Component","Header","Game","Submit","Scores","data","App","constructor","newGame","setState","score","questions","get4Q","i","question","get1Q","includes","push","index","getRandomInt","length","click","e","target","value","answer","style","color","disabled","state","onSubmitScore","preventDefault","scores","name","reset","game","componentDidMount","render","max","Math","floor","random"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Header from \"./components/Header\";\nimport Game from \"./components/Game\";\nimport Submit from \"./components/Submit\";\nimport Scores from \"./components/Score\";\nimport data from \"./data\";\n\nexport default class App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      score: 0,\n      questions: [],\n      scores: [],\n    };\n  }\n  componentDidMount() {\n    this.newGame();\n  }\n  render() {\n    return (\n      <div>\n        <Header score={this.state.score} newGame={this.newGame} />\n        <Game questions={this.state.questions} click={this.click} />\n        <Submit onSubmitScore={this.onSubmitScore} />\n        <Scores scores={this.state.scores} />\n      </div>\n    );\n  }\n  newGame = () => {\n    this.setState({ score: 0, questions: this.get4Q() });\n  };\n  get4Q = () => {\n    const questions = [];\n    for (let i = 0; i < 4; i++) {\n      let question = this.get1Q();\n      while (questions.includes(question)) {\n        question = this.get1Q();\n      }\n      questions.push(question);\n    }\n    return questions;\n  };\n  get1Q = () => {\n    const index = this.getRandomInt(data.questions.length);\n    return data.questions[index];\n  };\n  getRandomInt(max) {\n    return Math.floor(Math.random() * Math.floor(max));\n  }\n  click = (e, question) => {\n    if (e.target.value === `${question.answer}`) {\n      e.target.style.color = \"green\";\n      e.target.disabled = true;\n      this.setState({ score: this.state.score + 1 });\n    } else {\n      e.target.style.color = \"red\";\n      e.target.disabled = true;\n    }\n  };\n  onSubmitScore = (e) => {\n    e.preventDefault();\n    this.state.scores.push({\n      name: e.target.name.value,\n      score: this.state.score,\n    });\n    e.target.reset();\n    this.setState({ scores: this.state.scores });\n    game\n  };\n}\n"]},"metadata":{},"sourceType":"module"}