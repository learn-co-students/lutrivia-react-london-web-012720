{"ast":null,"code":"var _jsxFileName = \"/Users/amy/Development/code/lutrivia-react-london-web-012720/lutrivia/src/App.js\";\nimport React, { Component } from \"react\";\nimport Header from \"./components/Header\";\nexport default class App extends Component {\n  constructor() {\n    super();\n\n    this.newGame = () => {\n      this.setState({\n        score: 0\n      });\n      console.log(\"newGame\");\n    };\n\n    this.get4Q = () => {\n      const questions = [];\n    };\n\n    this.state = {\n      data: [],\n      score: 0\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      },\n      __self: this\n    }, React.createElement(Header, {\n      score: this.state.score,\n      newGame: this.newGame,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }));\n  }\n\n}","map":{"version":3,"sources":["/Users/amy/Development/code/lutrivia-react-london-web-012720/lutrivia/src/App.js"],"names":["React","Component","Header","App","constructor","newGame","setState","score","console","log","get4Q","questions","state","data","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AAEA,eAAe,MAAMC,GAAN,SAAkBF,SAAlB,CAA4B;AACzCG,EAAAA,WAAW,GAAG;AACZ;;AADY,SAiBdC,OAjBc,GAiBJ,MAAM;AACd,WAAKC,QAAL,CAAc;AAAEC,QAAAA,KAAK,EAAE;AAAT,OAAd;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACD,KApBa;;AAAA,SAqBdC,KArBc,GAqBN,MAAM;AACZ,YAAMC,SAAS,GAAG,EAAlB;AACD,KAvBa;;AAEZ,SAAKC,KAAL,GAAa;AACXC,MAAAA,IAAI,EAAE,EADK;AAEXN,MAAAA,KAAK,EAAE;AAFI,KAAb;AAID;;AACDO,EAAAA,MAAM,GAAG;AACP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AAAQ,MAAA,KAAK,EAAE,KAAKF,KAAL,CAAWL,KAA1B;AAAiC,MAAA,OAAO,EAAE,KAAKF,OAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF;AAOD;;AAhBwC","sourcesContent":["import React, { Component } from \"react\";\nimport Header from \"./components/Header\";\n\nexport default class App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      data: [],\n      score: 0,\n    };\n  }\n  render() {\n    return (\n      <div>\n        <Header score={this.state.score} newGame={this.newGame} />\n        {/* <Game /> */}\n        {/* <Submit /> */}\n      </div>\n    );\n  }\n  fetchD\n  newGame = () => {\n    this.setState({ score: 0 });\n    console.log(\"newGame\");\n  };\n  get4Q = () => {\n    const questions = [];\n  };\n}\n"]},"metadata":{},"sourceType":"module"}