{"ast":null,"code":"var _jsxFileName = \"/Users/amy/Development/code/lutrivia-react-london-web-012720/lutrivia/src/App.js\";\nimport React, { Component } from \"react\";\nimport Header from \"./components/Header\";\nimport data from \"./data\";\nexport default class App extends Component {\n  constructor() {\n    super();\n\n    this.newGame = () => {\n      this.setState({\n        score: 0,\n        question\n      });\n    };\n\n    this.get4Q = () => {\n      const questions = [];\n\n      for (let i = 0; i < 4; i++) {\n        let question = this.get1Q();\n\n        while (questions.includes(question)) {\n          question = this.get1Q();\n        }\n\n        questions.push(question);\n      }\n\n      return questions;\n    };\n\n    this.get1Q = () => {\n      const index = this.getRandomInt(data.questions.length);\n      return data.questions[index];\n    };\n\n    this.state = {\n      score: 0,\n      questions: []\n    };\n  }\n\n  render() {\n    this.get4Q();\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }, React.createElement(Header, {\n      score: this.state.score,\n      newGame: this.newGame,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }));\n  }\n\n  getRandomInt(max) {\n    return Math.floor(Math.random() * Math.floor(max));\n  }\n\n}","map":{"version":3,"sources":["/Users/amy/Development/code/lutrivia-react-london-web-012720/lutrivia/src/App.js"],"names":["React","Component","Header","data","App","constructor","newGame","setState","score","question","get4Q","questions","i","get1Q","includes","push","index","getRandomInt","length","state","render","max","Math","floor","random"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AAEA,eAAe,MAAMC,GAAN,SAAkBH,SAAlB,CAA4B;AACzCI,EAAAA,WAAW,GAAG;AACZ;;AADY,SAiBdC,OAjBc,GAiBJ,MAAM;AACd,WAAKC,QAAL,CAAc;AAAEC,QAAAA,KAAK,EAAE,CAAT;AAAYC,QAAAA;AAAZ,OAAd;AACD,KAnBa;;AAAA,SAoBdC,KApBc,GAoBN,MAAM;AACZ,YAAMC,SAAS,GAAG,EAAlB;;AACA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,CAApB,EAAuBA,CAAC,EAAxB,EAA4B;AAC1B,YAAIH,QAAQ,GAAG,KAAKI,KAAL,EAAf;;AACA,eAAOF,SAAS,CAACG,QAAV,CAAmBL,QAAnB,CAAP,EAAqC;AACnCA,UAAAA,QAAQ,GAAG,KAAKI,KAAL,EAAX;AACD;;AACDF,QAAAA,SAAS,CAACI,IAAV,CAAeN,QAAf;AACD;;AACD,aAAOE,SAAP;AACD,KA9Ba;;AAAA,SA+BdE,KA/Bc,GA+BN,MAAM;AACZ,YAAMG,KAAK,GAAG,KAAKC,YAAL,CAAkBd,IAAI,CAACQ,SAAL,CAAeO,MAAjC,CAAd;AACA,aAAOf,IAAI,CAACQ,SAAL,CAAeK,KAAf,CAAP;AACD,KAlCa;;AAEZ,SAAKG,KAAL,GAAa;AACXX,MAAAA,KAAK,EAAE,CADI;AAEXG,MAAAA,SAAS,EAAE;AAFA,KAAb;AAID;;AACDS,EAAAA,MAAM,GAAG;AACP,SAAKV,KAAL;AACA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AAAQ,MAAA,KAAK,EAAE,KAAKS,KAAL,CAAWX,KAA1B;AAAiC,MAAA,OAAO,EAAE,KAAKF,OAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF;AAOD;;AAmBDW,EAAAA,YAAY,CAACI,GAAD,EAAM;AAChB,WAAOC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBF,IAAI,CAACC,KAAL,CAAWF,GAAX,CAA3B,CAAP;AACD;;AAtCwC","sourcesContent":["import React, { Component } from \"react\";\nimport Header from \"./components/Header\";\nimport data from \"./data\";\n\nexport default class App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      score: 0,\n      questions: [],\n    };\n  }\n  render() {\n    this.get4Q();\n    return (\n      <div>\n        <Header score={this.state.score} newGame={this.newGame} />\n        {/* <Game /> */}\n        {/* <Submit /> */}\n      </div>\n    );\n  }\n  newGame = () => {\n    this.setState({ score: 0, question });\n  };\n  get4Q = () => {\n    const questions = [];\n    for (let i = 0; i < 4; i++) {\n      let question = this.get1Q();\n      while (questions.includes(question)) {\n        question = this.get1Q();\n      }\n      questions.push(question);\n    }\n    return questions;\n  };\n  get1Q = () => {\n    const index = this.getRandomInt(data.questions.length);\n    return data.questions[index];\n  };\n  getRandomInt(max) {\n    return Math.floor(Math.random() * Math.floor(max));\n  }\n}\n"]},"metadata":{},"sourceType":"module"}